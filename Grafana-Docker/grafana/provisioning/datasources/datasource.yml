apiVersion: 1

datasources:
  - name: Prometheus
    uid: prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true

  - name: Loki
    uid: loki
    type: loki
    access: proxy
    url: http://loki:3100
    correlations:
      - targetUID: tempo
        label: "logs to traces"
        description: "navigate from logs to traces"
        type: query
        config:
          field: "traceid"
          target:
            query: '$${__value.raw}'
          transformations:
            - type: regex
              field: "traceid"
              expression: "traceid=(\\w+)"
              mapValue: "traceid"
      
      - targetUID: prometheus
        label: "logs to metrics"
        description: "navigate from logs to metrics"
        type: query
        config:
          field: "service"
          target:
            expr: 'rate(http_requests_total{service="$${service}"}[5m])'
          transformations:
            - type: logfmt
              field: "msg"
    jsonData:
      derivedFields:
        - name: trace_id
          matcherRegex: "traceid=(\\w+)"
          url: "/explore?left=%7B%22datasource%22:%22tempo%22,%22queries%22:[%7B%22query%22:%22$${__value.raw}%22%7D]%7D"
          datasourceUid: tempo   # must match Tempo datasource UID

  - name: Tempo
    uid: tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    jsonData:
      # tracesToLogs:
        # datasourceUid: loki      # must match Loki datasource UID
        # spanStartTimeShift: "-5m"
        # spanEndTimeShift: "5m"
        # # remove "tags" unless you actually have Loki labels called "traceid"
        # mappedTags:
          # - key: service.name
            # value: service
        # filterByTraceID: true
        # filterBySpanID: false
      # traceToLogsV2: true
      
      # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'loki'
        spanStartTimeShift: '-1m'
        spanEndTimeShift: '1m'
        # tags: ['job', 'instance', 'pod', 'namespace']
        filterByTraceID: true
        filterBySpanID: true
        customQuery: false
        query: 'method="$${__span.tags.method}"'
        
      tracesToMetrics:
        datasourceUid: 'prometheus'
        spanStartTimeShift: '-5m'
        spanEndTimeShift: '5m'
        # tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Metrics_Query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      
      # tracesToProfiles:
        # datasourceUid: 'grafana-pyroscope-datasource'
        # tags: ['job', 'instance', 'pod', 'namespace']
        # profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
        # customQuery: true
        # query: 'method="$${__span.tags.method}"'
      serviceMap:
        datasourceUid: 'prometheus'
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '-5m'
        spanEndTimeShift: '5m'
      spanBar:
        type: 'Tag'
        tag: 'http.path'
      # streamingEnabled:
        # search: true


  - name: Alertmanager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    jsonData:
      implementation: prometheus 
