<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
	<configSections>
		<section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
		<section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
		<section name="RetryPolicyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration.RetryPolicyConfigurationSettings, Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration" />
		<section name="typeRegistrationProvidersConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.TypeRegistrationProvidersConfigurationSection, Microsoft.Practices.EnterpriseLibrary.Common" />
		<section name="redisCacheClient" type="StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler, StackExchange.Redis.Extensions.Core" />
		<section name="sax" type="Sax.Net.Helpers.SaxConfigurationSection, Sax.Net" />
	</configSections>
	<sax xmlReaderFactoryType="TagSoup.Net.XmlReaderFactory, TagSoup.Net" />
	<typeRegistrationProvidersConfiguration>
		<clear />
		<add sectionName="RetryPolicyConfiguration" name="RetryPolicyConfiguration" />
	</typeRegistrationProvidersConfiguration>
	<RetryPolicyConfiguration defaultRetryStrategy="FixedIntervalRetryStrategy">
		<incremental name="IncrementalRetryStrategy" retryIncrement="00:00:01" initialInterval="00:00:01" maxRetryCount="1" />
		<fixedInterval name="FixedIntervalRetryStrategy" retryInterval="00:00:20" maxRetryCount="2" />
		<exponentialBackoff name="BackoffRetryStrategy" minBackoff="00:00:01" maxBackoff="00:00:30" deltaBackoff="00:00:10" maxRetryCount="10" firstFastRetry="false" />
	</RetryPolicyConfiguration>
	<connectionStrings>

		<!-- SQL -->
		<add name="config" connectionString="Data Source=VM010-POC-DB\Sql2k22;Initial Catalog=NTAFU_NFS_SYS_CONF;Integrated Security=False;Persist Security Info=True;User Id=sa;Password=Netsolpk1!" providerName="System.Data.SqlClient" />
		<add name="UserManagementDatabase_1" connectionString="Data Source=VM010-POC-DB\Sql2k22;Initial Catalog=NTAFU_ASCENT2_UMS;Integrated Security=True;Persist Security Info=True;User ID=sa;Password=Netsolpk1!;" providerName="System.Data.SqlClient"/>
		<add name="BusinessDatabase_1" connectionString="Data Source=VM010-POC-DB\Sql2k22;Initial Catalog=NTAFU_ASCENT2_BUSINESS;Integrated Security=True;Persist Security Info=True;User ID=sa;Password=Netsolpk1!;" providerName="System.Data.SqlClient"/>
		<add name="BusinessRulesDatabase_1" connectionString="Data Source=VM010-POC-DB\Sql2k22;Initial Catalog=NTAFU_ASCENT2_BUSINESS;Integrated Security=True;Persist Security Info=True;User ID=sa;Password=Netsolpk1!;" providerName="System.Data.SqlClient"/>


		<!-- Oracle
			<add name="config" connectionString="Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.15.216.68)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)));User Id=NFS_CNG;Password=Netsolpk1;" providerName="Oracle.ManagedDataAccess.Client"/>
			<add name="BusinessDatabase_1"       connectionString="Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.15.216.68)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)));User Id=NFS_BUS;Password=Netsolpk1;" providerName="Oracle.ManagedDataAccess.Client"/>
			<add name="BusinessRulesDatabase_1"  connectionString="Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.15.216.68)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)));User Id=NFS_BUS;Password=Netsolpk1;" providerName="Oracle.ManagedDataAccess.Client"/>
			<add name="CreditBureauDatabase_1"   connectionString="Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.15.216.68)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)));User Id=NFS_CRD;Password=Netsolpk1"  providerName="Oracle.ManagedDataAccess.Client"/>
			<add name="IntegrationHubDatabase_1" connectionString="Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.15.216.68)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=orcl)));User Id=NFS_IH ;Password=Netsolpk1"  providerName="Oracle.ManagedDataAccess.Client"/>
	-->

	</connectionStrings>
	<!--Redis Distributed Cache Settings-->
	<redisCacheClient allowAdmin="true" ssl="false" connectTimeout="5000" database="0">
		<serverEnumerationStrategy mode="All" targetRole="PreferSlave" unreachableServerAction="IgnoreIfOtherAvailable" />
		<hosts>
			<add host="10.15.1.61" cachePort="6379" />
		</hosts>
	</redisCacheClient>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="13.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="IBM.XMS.WCF.NLS" culture="neutral" publicKeyToken="8c7c0be90afcd8ba" />
				<bindingRedirect oldVersion="0.0.0.0-8.0.0.5" newVersion="8.0.0.5" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="amqmdnet" culture="neutral" publicKeyToken="dd3cb1c9aae9ec97" />
				<bindingRedirect oldVersion="0.0.0.0-8.0.0.5" newVersion="8.0.0.5" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.5.4" newVersion="4.5.4" />
				<!--"4.0.1.2" />-->
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
		<namespace name="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Unity" />
		<namespace name="NFS.ServiceContracts" />
		<namespace name="NFS.Services" />
		<namespace name="NFS.Business" />
		<namespace name="NS.Logging" />
		<namespace name="NS.Services" />
		<namespace name="NFS.Services" />
		<namespace name="NS.ServiceContracts" />
		<namespace name="NS.Business" />
		<namespace name="NS.Cache" />
		<namespace name="NS.Utilities.Caching" />
		<namespace name="CMS.ServiceContracts" />
		<namespace name="WFS.ServiceContracts" />
		<namespace name="WFS.Services" />
		<namespace name="CMS.Business" />
		<namespace name="WFS.Business" />
		<namespace name="POS.Business" />
		<namespace name="POS.ServicesContracts" />
		<namespace name="CAP.Business" />
		<namespace name="NFS.Business" />
		<namespace name="NFS.ServiceContracts" />
		<namespace name="NFS.BatchProcessing" />
		<namespace name="NFS.BatchProcessing.Business" />
		<namespace name="NS.Validation.Factory" />
		<namespace name="NFS.Diary" />
		<namespace name="NFS.Diary.Business" />
		<namespace name="NS.Configurations.Data" />
		<namespace name="NS.Configurations.Providers" />
		<namespace name="NS.Configurations.Providers.Encryption" />
		<namespace name="NS.Utilities.Encryption" />
		<namespace name="NS.NotificationService" />
		<namespace name="NS.Business.IH.MessageFlowExecutor.Contracts" />
		<namespace name="NS.Business.IH.MessageFlowExecutor" />
		<namespace name="NS.Business.Configurations.Contracts" />
		<namespace name="NS.Business.Configurations.Logic" />
		<namespace name="NFS.SchedulerEventDispatcher" />
		<namespace name="NS.Business.Configurations.Helper" />
		<namespace name="NS.Business.Configurations.Client" />
		<assembly name="Microsoft.Practices.EnterpriseLibrary.Common" />
		<assembly name="NFS.ServiceContracts" />
		<assembly name="NFS.BusinessPartner" />
		<assembly name="NFS.Accounting" />
		<assembly name="NS.Cache" />
		<assembly name="NS.Logging" />
		<assembly name="NS.Common" />
		<assembly name="NFS.Common" />
		<assembly name="NS.BusinessRules" />
		<assembly name="NS.BaseModels" />
		<assembly name="NS.UserManagement" />
		<assembly name="NS.Configurations" />
		<assembly name="NFS.BusinessPartner" />
		<assembly name="NS.Configurations.Client" />
		<assembly name="NS.Configurations.Interfaces" />
		<assembly name="NS.ServiceContracts" />
		<assembly name="NS.HealthMonitoring" />
		<assembly name="NS.CacheService" />
		<assembly name="CMS.ServiceContracts" />
		<assembly name="WFS.ServiceContracts" />
		<assembly name="CMS.Receipting" />
		<assembly name="CMS.PDC" />
		<assembly name="CMS.OverdueCalculation" />
		<assembly name="CMS.CollectionFollowUp" />
		<assembly name="NFS.Common" />
		<assembly name="NS.MasterData" />
		<assembly name="NS.IntegrationHub" />
		<assembly name="NS.NotificationService" />
		<assembly name="NFS.AssetManagement" />
		<assembly name="NS.SchedulerEventDispatcher" />
		<assembly name="NFS.ServiceContracts" />
		<assembly name="NFS.ExternalInterfaces" />
		<assembly name="CMS.FinancialProduct" />
		<assembly name="CMS.CreditLine" />
		<assembly name="CMS.ConvertToContract" />
		<assembly name="CMS.ContractActivation" />
		<assembly name="CMS.Disbursement" />
		<assembly name="CMS.ContractModification" />
		<assembly name="CMS.ContractRevision" />
		<assembly name="CAP.PhoneVerification" />
		<assembly name="CAP.FinancialAnalysis" />
		<assembly name="CAP.UnderwritingProcess" />
		<assembly name="CAP.AddressVerification" />
		<assembly name="CMS.PbocProcess" />
		<assembly name="POS.ServicesContracts" />
		<assembly name="POS.Quotation" />
		<assembly name="POS.Portal" />
		<assembly name="POS.Application" />
		<assembly name="POS.PreQualification" />
		<assembly name="POS.Calculation" />
		<assembly name="NFS.BatchProcessing" />
		<assembly name="NFS.TaxConfiguration" />
		<assembly name="NFS.Diary" />
		<assembly name="CMS.DirectDebit" />
		<assembly name="CMS.DirectCredit" />
		<assembly name="CMS.ContractClosing" />
		<assembly name="CMS.Repossession" />
		<assembly name="CMS.Remarketing" />
		<assembly name="CMS.Litigation" />
		<assembly name="CMS.LienRegisteration" />
		<assembly name="CMS.FlatCancellation" />
		<assembly name="NFS.SchedulerEventDispatcher" />
		<assembly name="NS.Utilities" />
		<assembly name="NFS.CaseManagement" />
		<assembly name="CMS.OptionsToPurchase" />
		<assembly name="CMS.BadDebtProvision" />
		<assembly name="CMS.EarlyTermination" />
		<assembly name="CMS.CustomerServices" />
		<assembly name="CMS.AssetBackedSecurities" />
		<assembly name="WFS.Invoicing" />
		<assembly name="WFS.Loan" />
		<assembly name="WFS.Receipting" />
		<assembly name="WFS.CreditLimit" />
		<assembly name="WFS.FinancialProduct" />
		<assembly name="WFS.Charges" />
		<assembly name="WFS.Charts" />
		<assembly name="WFS.Payable" />
		<assembly name="WFS.Disbursement" />
		<assembly name="WFS.Transfer" />
		<assembly name="WFS.Common" />
		<assembly name="WFS.LoanRequestCommon" />
		<assembly name="WFS.Audit" />
		<assembly name="WFS.DirectDebit" />
		<assembly name="WFS.InterestCalculation" />
		<assembly name="WFS.PenaltyCalculation" />
		<assembly name="WFS.DirectCredit" />
		<assembly name="WFS.CMA" />
		<assembly name="CMS.PointScore" />
		<assembly name="WFS.BulletinBoard" />
		<assembly name="CMS.JointLoan" />
		<assembly name="WFS.BPAgreement" />
		<assembly name="CMS.ContractSecuritization" />
		<assembly name="NS.HealthMonitoring.Service" />
		<container>
			<register type="ILogHandler" mapTo="LogHandler" />
		</container>
		<container name="validation">
			<register type="IValidationFactory" mapTo="ValidationFactory">
				<lifetime type="singleton" />
			</register>
		</container>
		<container name="BusinessLogicContainer">
			<register type="IBusinessPartnerService" mapTo="BusinessPartnerLogic" />
			<register type="IBpLocationService" mapTo="BpLocationLogic" />
			<register type="IMetadataService" mapTo="MetadataLogic" />
			<register type="IMasterDataService" mapTo="MasterDataLogic" />
			<register type="IBusinessRuleManagementService" mapTo="BusinessRuleManagementLogic" />
			<register type="IBusinessRuleExecutionService" mapTo="BusinessRuleExecutionLogic" />
			<register type="IDataExtractionService" mapTo="DataExtractionLogic" />
			<register type="IAuditTrailService" mapTo="AuditTrailLogic" />
			<register type="IDynamicUiService" mapTo="DynamicUiLogic" />
			<register type="IMaskService" mapTo="MaskLogic" />
			<register type="ILocalizationService" mapTo="LocalizationLogic" />
			<register type="ICacheService" mapTo="CacheLogic" />
			<register type="ILocalizationDataService" mapTo="LocalizationDataLogic" />
			<register type="IDocumentGenerationService" mapTo="DocumentGenerationLogic">
				<!--It should remain Singletion because this calls DNMS net tcp serivces. 
        It is managed in the logic class to call different node of DNMS for each call incase of multi-node environment.
        Removing this line would cause problem in the requests routing to multiple DNMS nodes in place. 
        Discuss with Architect Team before any modifications.-->
				<lifetime type="singleton" />
			</register>
			<!--<register type="IUsersService" mapTo="UsersLogic" />-->
			<register type="ISecurityService" mapTo="SecurityLogic" />
			<register type="IValidationService" mapTo="ValidationLogic" />
			<register type="IBpmDesignerService" mapTo="BpmDesignerLogic" />
			<register type="IWorkflowEngineService" mapTo="WorkflowEngineLogic" />
			<register type="IQueueManagementService" mapTo="QueueManagementLogic" />
			<register type="INotificationService" mapTo="ApplicationNotificationLogic" />
			<register type="IReportsConfigurationService" mapTo="ReportsConfigurationLogic" />
			<register type="IDocumentManagementService" mapTo="DocumentManagementLogic" />
			<register type="ITaskQueueService" mapTo="TaskQueueLogic" />
			<register type="IBpmConfigurationService" mapTo="BpmConfigurationLogic" />
			<register type="ISearchService" mapTo="SearchLogic" />
			<register type="ILoginService" mapTo="LoginLogic" />
			<register type="IHealthMonitoringService" mapTo="HealthMonitoringLogic" />
			<register type="IHealthAndMonitoringService" mapTo="HealthAndMonitoringLogic" />
			<register type="IMonitoringService" mapTo="MonitoringLogic" />
			<register type="IEventDispatcherLogicService" mapTo="EventDispatcherLogicNfs" />
			<register type="IIntegrationHubService" mapTo="IntegrationHubLogic">
				<constructor>
					<param name="encr" />
				</constructor>
			</register>
			<register type="ILogViewerService" mapTo="LogViewerLogic" />
			<register type="IBusinessPartnerService" mapTo="BusinessPartnerLogic" />
			<register type="IExternalClientService" mapTo="ExternalClientLogic" />
			<register type="IConfigurationService" mapTo="ConfigurationLogic">
				<constructor>
					<param name="deploymentLogic" />
					<param name="loginScreenLogic" />
					<param name="encryptionMethods">
						<dependency name="dbEncrytionMethod" />
					</param>
				</constructor>
			</register>
			<register type="IWarmUpService" mapTo="WarmUpLogic"/>
			<register type="ISampleService" mapTo="SampleLogic" />
			<register type="IDuplexSampleService" mapTo="DuplexSampleLogic" />
			<register type="INotificationRequestService" mapTo="NotificationRequestLogic" />
			<register type="IChartsService" mapTo="ChartsLogic" />
			<register type="ICalculationIntegrationService" mapTo="CalculationIntegrationLogic" />
			<register type="IAssetManagementService" mapTo="AssetManagementServiceLogic" />
			<register type="IMultiTenancyService" mapTo="MultiTenancyLogic" />
			<register type="IDocumentUploadingService" mapTo="DocumentUploadingLogic" />
			<!--<register type="IPointScoreService" mapTo="PointScoreLogic"/>-->
			<register type="IPrintRequestService" mapTo="PrintRequestServiceLogic" />
			<!--<register type="IDocumentGenerationService" mapTo="DocumentGenerationLogic"/>-->
			<register type="IAuditTrailHostService" mapTo="AuditTrailHostLogic" />
			<register type="INotificationServiceService" mapTo="NotificationServiceLogic" />
			<register type="IExposureService" mapTo="ExposureLogic" />
			<register type="ISendBackService" mapTo="SendBackLogic" />
			<register type="IPrintRequestService" mapTo="PrintRequestServiceLogic" />
			<register type="IFinancialProductService" mapTo="FinancialProductServiceLogic" />
			<register type="ICreditLineService" mapTo="CreditLineServiceLogic" />
			<register type="IContractActivationService" mapTo="ContractActivationServiceLogic" />
			<register type="ILienRegisterationService" mapTo="LienRegisterationServiceLogic" />
			<register type="IDisbursementService" mapTo="DisbursementServiceLogic" />
			<register type="IContractClosingService" mapTo="ContractClosingServiceLogic" />
			<register type="IConvertToContractService" mapTo="ConvertToContractServiceLogic" />
			<register type="IContractModificationService" mapTo="ContractModificationServiceLogic" />
			<register type="IContractRevisionService" mapTo="ContractRevisionServiceLogic" />
			<register type="IPhoneVerificationService" mapTo="PhoneVerificationLogic" />
			<register type="IFinancialAnalysisService" mapTo="FinancialAnalysisLogic" />
			<register type="IUnderwritingProcessService" mapTo="UnderwritingProcessLogic" />
			<register type="IReceiptingService" mapTo="ReceiptingLogic" />
			<register type="IPDCService" mapTo="PDCLogic" />
			<register type="ICollectionFollowupService" mapTo="CollectionFollowupLogic" />
			<register type="IOverdueCalculationService" mapTo="OverdueCalculationLogic" />
			<register type="IDirectDebitService" mapTo="DirectDebitLogic" />
			<register type="IDirectCreditService" mapTo="DirectCreditLogic" />
			<register type="ICurrencyChartService" mapTo="CurrencyChartLogic" />
			<register type="IAddressVerificationService" mapTo="AddressVerificationLogic" />
			<register type="IRedbookService" mapTo="RedbookLogic" />
			<register type="ICeasarService" mapTo="CeasarLogic" />
			<register type="IDiaryService" mapTo="DiaryLogic" />
			<register type="IPayableService" mapTo="PayableLogic" />
			<register type="IExternalInterfaceService" mapTo="ExternalInterfaceLogic" />
			<register type="IAllRmwService" mapTo="AllRmwLogic" />
			<register type="IWFSExternalInterfaceService" mapTo="WFSExternalInterfaceLogic" />
			<register type="IWFSExternalInterfaceService" mapTo="WFSExternalInterfaceLogic" />
			<register type="IImportExportService" mapTo="ImportExportLogic" />
			<register type="IPickRepickService" mapTo="PickRepickLogic" />
			<register type="IInterfaceQueueService" mapTo="InterfaceQueueServiceLogic" />
			<register type="IDocumentTrackingService" mapTo="DocumentTrackingLogic" />
			<register type="INcicSaicService" mapTo="NcicSaicServiceLogic" />
			<register type="IPbocReportsService" mapTo="PbocReportsLogic" />
			<register type="IDmsReIndexingService" mapTo="DmsReIndexingLogic" />
			<register type="IDngService" mapTo="DngLogic" />
			<register type="IBatchProcessControllerService" mapTo="BatchProcessLogic" />
			<register type="IAccountingService" mapTo="AccountingLogic" />
			<register type="ITaxConfigurationService" mapTo="TaxConfigurationServiceLogic" />
			<register type="IDayEndService" mapTo="DayEndLogic" />
			<register type="IBlazeResponse" mapTo="BlazeResponseLogic" />
			<register type="ITuService" mapTo="TuLogic" />
			<register type="IOnlineSelfService" mapTo="OnlineSelfServiceLogic" />
			<register type="IQuestNetService" mapTo="QuestNetLogic" />
			<register type="ICtosService" mapTo="CtosLogic" />
			<register type="INcbService" mapTo="NcbLogic" />
			<register type="ICibilService" mapTo="CibilLogic" />
			<register type="IKCBService" mapTo="KCBLogic" />
			<register type="INiceService" mapTo="NiceLogic" />
			<register type="IWebPosSyncService" mapTo="WebPosSyncLogic" />
			<register type="IDynamicUiWebService" mapTo="DynamicUiWebLogic" />
			<register type="IRepossessionService" mapTo="RepossessionLogic" />
			<register type="IRemarketingService" mapTo="RemarketingLogic" />
			<register type="IEarlyTerminationService" mapTo="EarlyTerminationLogic" />
			<register type="IOptionsToPurchaseService" mapTo="OptionsToPurchaseLogic" />
			<register type="IBadDebtProvisionService" mapTo="BadDebtProvisionLogic" />
			<register type="IFlatCancellationService" mapTo="FlatCancellationLogic" />
			<register type="IRequestAssociationsService" mapTo="RequestAssociationsLogic" />
			<register type="IDocumentIndexingService" mapTo="DocumentIndexingLogic" />
			<register type="IAssetBackedSecuritiesService" mapTo="AssetBackedSecuritiesLogic" />
			<register type="ILitigationService" mapTo="LitigationLogic" />
			<register type="IExternalCodesService" mapTo="ExternalCodesLogic" />
			<register type="IDeploymentLogic" mapTo="DeploymentLogic" />
			<register type="ILoginScreenLogic" mapTo="LoginScreenLogic" />
			<register type="IEncryptionMethods" mapTo="EncryptionMethods" />
			<register type="IEncryptionKeyProvider" mapTo="CentralKeyProvider" />
			<register type="IEncryptionMethods" mapTo="EncryptionMethods" name="dbEncrytionMethod">
				<lifetime type="singleton" />
				<constructor>
					<param name="keyProvider">
						<dependency name="dbKeyProvider" />
					</param>
				</constructor>
			</register>
			<register type="IEncryptionKeyProvider" mapTo="DbKeyProvider" name="dbKeyProvider">
				<lifetime type="singleton" />
			</register>
			<register type="IPromotionNotificationService" mapTo="PromotionAndNotificationLogic" />
			<register type="IMDSyncService" mapTo="MDSyncLogic" />
			<!--WFS Business Logic Container-->
			<register type="IInvoicingService" mapTo="InvoicingServiceLogic" />
			<register type="ILoanService" mapTo="LoanServiceLogic" />
			<register type="IWfsReceiptingService" mapTo="WfsReceiptingServiceLogic" />
			<register type="ICreditLimitService" mapTo="CreditLimitServiceLogic" />
			<register type="ILoanFPService" mapTo="LoanFPServiceLogic" />
			<register type="IWFSChartsService" mapTo="WFSChartsServiceLogic" />
			<register type="IWFSChargesService" mapTo="WFSChargesServiceLogic" />
			<register type="IWFSPayableService" mapTo="WFSPayableServiceLogic" />
			<register type="IWFSDisbursementService" mapTo="WFSDisbursementServiceLogic" />
			<register type="ITransferService" mapTo="TransferServiceLogic" />
			<register type="ICommonService" mapTo="CommonServiceLogic" />
			<register type="ILoanRequestService" mapTo="LoanRequestServiceLogic" />
			<register type="IAuditService" mapTo="AuditServiceLogic" />
			<register type="ILoanDirectDebitService" mapTo="LoanDirectDebitServiceLogic" />
			<register type="IInterestCalculationService" mapTo="InterestCalculationServiceLogic" />
			<register type="IPenaltyCalculationService" mapTo="PenaltyCalculationServiceLogic" />
			<register type="ILoanDirectCreditService" mapTo="LoanDirectCreditServiceLogic" />
			<register type="ICMAService" mapTo="CMAServiceLogic" />
			<register type="IPointScoreServiceTest" mapTo="PointScoreServiceLogic" />
			<register type="IPbocProcessService" mapTo="PbocProcessLogic" />
			<register type="IBulletinBoardService" mapTo="BulletinBoardServiceLogic" />
			<register type="IExternalCodesService" mapTo="ExternalCodesLogic" />
			<register type="ICaseManagementService" mapTo="CaseManagementLogic" />
			<register type="IJointLoanService" mapTo="JointLoanLogic" />
			<register type="IBPAgreementService" mapTo="BPAgreementServiceLogic" />
			<register type="IContractSecuritizationService" mapTo="ContractSecuritizationServiceLogic" />
		</container>
		<container name="PGSBusinessLogicContainer">
			<register type="IPGSService" mapTo="PGSLogic" />
		</container>
		<container name="POSBusinessLogicContainer">
			<register type="IQuotationService" mapTo="QuotationLogic" />
			<register type="IApplicationService" mapTo="ApplicationLogic" />
			<register type="IPortalService" mapTo="PortalLogic" />
			<register type="IPosCalculationService" mapTo="PosCalculationLogic" />
			<register type="IPreQualificationService" mapTo="PreQualificationLogic" />
		</container>
		<container name="CSIBusinessLogicContainer">
			<register type="ICustomerServicesService" mapTo="CustomerServicesLogic" />
			<register type="ICsOverviewService" mapTo="CsOverviewLogic" />
			<register type="ICsContractDetailsService" mapTo="CsContractDetailsLogic" />
		</container>
		<container name="IhContainer">
			<register type="IMapForceDllResolver" mapTo="SharedMapForceDllResolver">
				<lifetime type="singleton" />
			</register>
		</container>
		<container name="CacheContainer">
			<register name="configProvider" type="IMemcachedConfigurationProvider" mapTo="MemcachedConfigurationProvider" />
			<register type="ICache" mapTo="MemCached">
				<!--<register type="ICache" mapTo="RedisCacheClient">-->
				<!--Default type-->
				<lifetime type="singleton" />
				<constructor>
					<param name="name">
						<value value="ServerDistCache" />
					</param>
					<param name="configurationProvider">
						<dependency name="configProvider" />
					</param>
				</constructor>
			</register>
			<register name="InProcess" type="ICache" mapTo="InMemoryCache">
				<!--In Process-->
				<lifetime type="singleton" />
				<constructor>
					<param name="name">
						<value value="ServerMemoryCache" />
					</param>
				</constructor>
			</register>
		</container>
		<container name="ConfigurationContainer">
			<register type="IServiceClient" mapTo="ServiceClient"/>
			<register type="IValueProvider" mapTo="LocalFirstValueProvider"/>
			<!--<register type="IValueProvider" mapTo="ConfigValueProvider"/>-->
			<register type="IEncryptionKeyProvider" mapTo="CentralKeyProvider"/>
			<register type="IEncryptionMethods" mapTo="EncryptionMethods"/>
			<register type="IDeploymentLogic" mapTo="DeploymentLogic"/>
			<register type="ILoginScreenLogic" mapTo="LoginScreenLogic"/>
			<register type="IConfigurationService" mapTo="ConfigurationLogic">
				<constructor>
					<param name="deploymentLogic" />
					<param name="loginScreenLogic" />
					<param name="encryptionMethods">
						<dependency name="dbEncrytionMethod" />
					</param>
				</constructor>
			</register>
			<register type="IEncryptionMethods" mapTo="EncryptionMethods" name="dbEncrytionMethod">
				<lifetime type="singleton" />
				<constructor>
					<param name="keyProvider">
						<dependency name="dbKeyProvider" />
					</param>
				</constructor>
			</register>
			<register type="IEncryptionKeyProvider" mapTo="DbKeyProvider" name="dbKeyProvider">
				<lifetime type="singleton" />
			</register>
		</container>
		<container name="clientInfo" />
	</unity>
	<exceptionHandling>
		<exceptionPolicies>
			<!-- Server Side Policies -->
			<add name="CommunicationPolicy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
						<exceptionHandlers>
							<add name="LogHandler" type="NS.ExceptionHandling.Custom_Handlers.LogExceptionHandler, NS.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="BusinessPolicy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="ThrowNewException">
						<exceptionHandlers>
							<add name="LogHandler" type="NS.ExceptionHandling.Custom_Handlers.LogExceptionHandler, NS.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="DataPolicy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="ThrowNewException">
						<exceptionHandlers>
							<add name="LogHandler" type="NS.ExceptionHandling.Custom_Handlers.LogExceptionHandler, NS.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<!-- End - Server Side Policies -->
			<!-- Common Policies -->
			<add name="LogOnlyPolicy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
						<exceptionHandlers>
							<add name="LogHandler" type="NS.ExceptionHandling.Custom_Handlers.LogExceptionHandler, NS.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="GeneralPolicy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="ThrowNewException">
						<exceptionHandlers>
							<add name="LogHandler" type="NS.ExceptionHandling.Custom_Handlers.LogExceptionHandler, NS.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<!-- End - Common Policies -->
		</exceptionPolicies>
	</exceptionHandling>
	<nlog schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd" autoReload="true" throwExceptions="true" internalLogLevel="Error" internalLogFile="c:\temp\nlog-internal.log" xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<extensions>
			<add assembly="NS.Logging.Extended" />
		</extensions>
		<targets>
			<default-wrapper xsi:type="AsyncWrapper" queueLimit="25000" timeToSleepBetweenBatches="50" batchSize="200" overflowAction="Grow">
				<wrapper-target xsi:type="RetryingWrapper" retryDelayMilliseconds="10000" retryCount="3" />
			</default-wrapper>
			<target name="infoFileLog" xsi:type="File" layout="====================BEGIN==================== ${newline}Context Id: ${mdc:Context} ${newline}Work Date: ${mdc:WorkDate}         Current Date: ${date:format=yyyy-MM-dd HH\:mm\:ss.fff}${newline}Level: ${level} ${newline}Application Information: ${newline}  Application Code: ${mdc:AppCode} ${newline}  Screen Id: ${mdc:ScreenId}${newline}  Action: ${mdc:Action}${newline}  Domain: ${appdomain}${newline}  Assembly Version: ${assembly-version}${newline} Base Directory: ${basedir}${newline}User Information: ${newline}  Login Id: ${mdc:LoginId}${newline}  Session: ${mdc:SessionId}${newline}  Culture: ${mdc:Culture}${newline}  IP Address: ${mdc:MachineIP}${newline}  Language: ${mdc:LanguageName}${newline}Exception: ${newline}  ${message} ${mdc:Excep} ${exception:format=tostring}${newline}Stack Trace: ${newline}  ${stacktrace:topFrames=50:skipFrames=3}${newline}Custom Message: ${newline}  ${mdc:Mesg}${newline} =====================END=====================" fileName="${basedir}/logs/${level}/logfile.txt" archiveFileName="${basedir}/archives/${level}/log.{#####}.txt" archiveEvery="Month" archiveAboveSize="5000000" archiveNumbering="Rolling" maxArchiveFiles="10" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2" />
			<target name="infoDBLog" xsi:type="Database" commandText="[Logs_Data_I]" commandType="StoredProcedure" connectionString="${mdc:LogsDatabase}">
				<parameter name="@CTXT_ID" layout="${mdc:Context}" />
				<parameter name="@LOGN_ID" layout="${mdc:LoginId}" />
				<parameter name="@APPL_KEY" layout="${mdc:AppCode}" />
				<parameter name="@SESN_ID" layout="${mdc:SessionId}" />
				<parameter name="@SESN_CODE" layout="${mdc:SessionId}" />
				<parameter name="@WORK_DTE" layout="${mdc:WorkDate:format=yyyy-MM-dd}" />
				<parameter name="@CULT" layout="${mdc:Culture}" />
				<parameter name="@USR_NME" layout="${mdc:LoginId}" />
				<parameter name="@CSTM_MESG" layout="${mdc:Mesg}" />
				<parameter name="@LOG_LVL" layout="${level}" />
				<parameter name="@LANG_ID" layout="${mdc:LanguageId}" />
				<parameter name="@LANG_NME" layout="${mdc:LanguageName}" />
				<parameter name="@SCRN_ID" layout="${mdc:ScreenId}" />
				<parameter name="@ACTN" layout="${mdc:Action}" />
				<parameter name="@EXCP_MESG" layout="${message}" />
				<parameter name="@CALL_STCK" layout="${stacktrace:topFrames=50:skipFrames=3}" />
				<parameter name="@CLNT_IP" layout="${mdc:MachineIP}" />
				<parameter name="@APPL_DOMN" layout="${appdomain}" />
				<parameter name="@ASMB_VRSN" layout="${assembly-version}" />
				<parameter name="@BASE_DRCT" layout="${basedir}" />
				<parameter name="@REF_ID" layout="${mdc:Reference}" />
				<parameter name="@RSRC_ADDR" layout="${mdc:ResourceAddress}" />
				<parameter name="@INSR_BY" layout="${mdc:LanguageId}" />
				<parameter name="@UPDT_BY" layout="${mdc:LanguageId}" />
				<parameter name="@SRVR_IP" layout="${mdc:ServerIp}" />
				<parameter name="@RTRY_CNT" layout="${mdc:RetryCount}" />
				<parameter name="@STS_KEY" layout="${mdc:StatusKey}" />
				<parameter name="@INVK_TYPE" layout="${mdc:InvocationType}" />
				<parameter name="@STRT_DTE" layout="${mdc:StartDate:format=yyyy-MM-dd HH\:mm\:ss.fff}" />
				<parameter name="@END_DTE" layout="${mdc:EndDate:format=yyyy-MM-dd HH\:mm\:ss.fff}" />
				<parameter name="@FILE_NME" layout="${mdc:FileName}" />
				<parameter name="@RESN_ID" layout="${mdc:ReasonId}" />
				<parameter name="@TIME_OUT_IND" layout="${mdc:TimeOut}" />
				<parameter name="@SUB_TNNT_ID" layout="${mdc:SubTenantId}" />
			</target>
			<target name="ConfigAndServicesAssociationLog" xsi:type="File" layout="====================BEGIN==================== ${newline} Current Date: ${date:format=yyyy-MM-dd HH\:mm\:ss.fff}${newline} Application Code: ${mdc:AppCode}${newline} Message:${newline}${message}${mdc:Message}${newline} =====================END=====================" fileName="${basedir}/Logs/Config/Services_${date:format=yyyy-MM-dd HH_mm_ss.fff}.txt" archiveFileName="${basedir}/archives/${level}/log.{#####}.txt" archiveEvery="Day" archiveAboveSize="100000" archiveNumbering="Rolling" maxArchiveFiles="3" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2" />
			<target name="CalculationIntegrationLog" xsi:type="File" layout="====================BEGIN==================== ${newline}Context Id: ${mdc:Context} ${newline}Work Date: ${mdc:WorkDate}         Current Date: ${date:format=yyyy-MM-dd HH\:mm\:ss.fff}${newline}Level: ${level} ${newline}Application Information: ${newline}  Application Code: ${mdc:AppCode} ${newline}  Screen Id: ${mdc:ScreenId}${newline}  Action: ${mdc:Action}${newline}  Domain: ${appdomain}${newline}  Assembly Version: ${assembly-version}${newline} Base Directory: ${basedir}${newline}User Information: ${newline}  Login Id: ${mdc:LoginId}${newline}  Session: ${mdc:SessionId}${newline}  Culture: ${mdc:Culture}${newline}  IP Address: ${mdc:MachineIP}${newline}  Language: ${mdc:LanguageName}${newline}Message:${newline}${message}${mdc:Message}${newline} =====================END=====================" fileName="${basedir}/Logs/CalculationIntegration/CalculationIntegration_${date:format=yyyy-MM-dd}_${threadid}.txt" archiveFileName="${basedir}/archives/${level}/CalculationIntegration.{#####}.txt" archiveEvery="Month" archiveAboveSize="5000000" archiveNumbering="Rolling" maxArchiveFiles="3" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2" />
			<target name="infoSecondaryLog" xsi:type="NsSecondaryTarget" />
			<target xsi:type="EventLog" name="infoEventLog" source="Application" eventId="1" layout="====================BEGIN==================== ${newline}Context Id: ${mdc:Context} ${newline}Work Date: ${mdc:WorkDate}         Current Date: ${date:format=yyyy-MM-dd HH\:mm\:ss.fff}${newline}Level: ${level} ${newline}Application Information: ${newline}  Application Code: ${mdc:AppCode} ${newline}  Screen Id: ${mdc:ScreenId}${newline}  Action: ${mdc:Action}${newline}  Domain: ${appdomain}${newline}  Assembly Version: ${assembly-version}${newline} Base Directory: ${basedir}${newline}User Information: ${newline}  Login Id: ${mdc:LoginId}${newline}  Session: ${mdc:SessionId}${newline}  Culture: ${mdc:Culture}${newline}  IP Address: ${mdc:MachineIP}${newline}  Language: ${mdc:LanguageName}${newline}Exception: ${newline}  ${message} ${mdc:Excep} ${exception:format=tostring}${newline}Stack Trace: ${newline}  ${stacktrace:topFrames=50:skipFrames=3}${newline}Custom Message: ${newline}  ${mdc:Mesg}${newline} =====================END=====================" />
		</targets>
		<rules>
			<logger name="logger" minlevel="Error" writeTo="infoFileLog,infoDBLog,infoEventLog,infoSecondaryLog" />
			<logger name="ConfigAndServicesAssociationLogger_logger" minlevel="Error" writeTo="ConfigAndServicesAssociationLog" />
			<logger name="CalculationIntegrationLogger_logger" minlevel="Error" writeTo="CalculationIntegrationLog" />
		</rules>
	</nlog>
	<appSettings>
		<!--<add key="EncryptionKey" value="Ascent 2.0" />-->
		<!--<add key="ByPassEncryption" value="True"/>-->
		<add key="ReceiptingService" value="!ARMAPI"/>
		<add key="ARMAPIURL" value="https://localhost:7188/ARM"/>
		<add key="ConfigurationServer" value="http://localhost/NS.ServiceHosting/"/>
		<add key="wfsUserName" value="fNXg2d+VbZ1xtvUvlhSL7g=="/>
		<add key="wfsPassword" value="fNXg2d+VbZ1xtvUvlhSL7g=="/>
		<add key="ReceiveTimeout" value="300"/>
		<add key="SendTimeout" value="300"/>
		<add key="check" value="test"/>
		<!-- Busniess Rule execution history configuration -->
		<add key="LogBusinessRuleVariables" value="false" />
		<!-- End -->
		<!-- BPM Tracking -->
		<add key="EnableBpmTracking" value="true" />
		<!-- End BPM Tracking-->
		<!-- Transport Compression GZip, Deflate  -->
		<add key="EnableTransportCompression" value="false" />
		<add key="TransportCompressionAlgorithm" value="GZip" />
		<!-- End Transport Compression GZip, Deflate  -->
		<!-- Validation-->
		<add key="ValidateSession" value="false" />
		<add key="ValidateInput" value="false" />
		<!-- End Validation-->
		<!--<add key="Context" value="Per Session"></add>
    <add key="Concurrency" value="Multiple"></add>-->
		<!--<add key = "BusinessRuleManagementService_Context" value = "Per Call"></add>
    <add key = "BusinessRuleManagementService_Concurrency" value = "Reentrant"></add>-->
		<!-- End Service configurations -->
		<!--For Channel factory calls from Server-->
		<add key="ReceiveTimeout" value="300" />
		<add key="SendTimeout" value="300" />
		<!--For Channel factory calls from Server-->
		<!--Business Rule Execution History-->
		<add key="SaveBrExecHistory" value="False" />
		<!--Business Rule Execution History-->
		<!-- Message Encoding -->
		<add key="MessageEncoding" value="Text" />
		<!--System Notification Configuration Directory-->
		<add key="dataFilePath" value="E:\ConfigFiles" />
		<add key="AppCode" value="APPSR" />
		<!--Configuration Management-->
		<add key="AppKey" value="APPSR" />
		<!--<add key="ProfileKey" value="WFS"></add>-->
		<add key="ProfileKey" value="DEMO"></add>
		<add key="ServicesFallBack" value="False"/>
		<!--Node address without the scheme e.g: 12.1.1.1 instead of http://12.1.1.1-->
		<!--<add key="NodeAddress" value="10.15.1.242/NS.ServiceHosting"></add>-->
		<add key="DnmsDocGenerationService" value="net.tcp://localhost:49157/DocGenerationService/" />
		<add key="DnmsDocGenerationService_MessageEncoding" value="Binary" />
		<add key="PrintingService" value="net.tcp://localhost:49001/PrintingService/" />
		<add key="PrintingService_MessageEncoding" value="Binary" />
		<add key="DnmsCacheService" value="net.tcp://localhost:5000/DnmsCacheService/" />
		<add key="DnmsCacheService_MessageEncoding" value="Binary" />
		<add key="ReportsConfigurationService" value="http://localhost/NS.ServiceHostingARC/" />
		<!-- Data and Combo Validation Keys -->
		<add key="ServerDataValidation" value="false" />
		<add key="DetailedLogs" value="false" />
		<add key="ValidateCacheType" value="SvrDist,SvrMem" />
		<!--Cache expiry in minutes-->
		<add key="CacheExpiry" value="5" />
		<!--In case multiple dayends needs to be submitted-->
		<add key="AllowMultipleDayEnds" value="0" />
		<add key="HnMDispatchMode" value="File" />
		<!--Default Protocol settings for Configuration Service-->
		<add key="ConfigurationServiceProtocol" value="http" />
		<add key="ServerDataValidation" value="false" />
		<add key="ServerMandatoryValidation" value="true" />
		<add key="ValidateCacheType" value="SvrDist,SvrMem" />
		<add key="NextWorkingDayCount" value="120" />
		<!--PAPI bp decline delay (in seconds)-->
		<add key="PAPI_bpDeclineDelay" value="2" />
		<add key="OracleAssembly" value="bin\NS.ORM.OracleManaged.dll" />
		<add key="OracleAssemblyProvider" value="NS.BaseModels.OracleManaged.OracleManagedProvider" />
		<!--To Enable/Disable Logging for Calculation Integration-->
		<add key="CalculationIntegrationLogging" value="Disable"/>
		<add key="EnableOpenSqlLogging" value="True" />
	</appSettings>
	<system.data>
		<DbProviderFactories>
			<remove invariant="Oracle.ManagedDataAccess.Client" />
			<add name="ODP.NET, Managed Driver" invariant="Oracle.ManagedDataAccess.Client" description="Oracle Data Provider for .NET, Managed Driver" type="Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=4.122.23.1, Culture=neutral, PublicKeyToken=89b483f429c47342" />
		</DbProviderFactories>
	</system.data>
	<!-- Configurations for Fiddler to sniff the incoming calls -->
	<!--<system.net>
    <defaultProxy>
      <proxy bypassonlocal="False" usesystemdefault="False" proxyaddress="http://127.0.0.1:99" />
    </defaultProxy>
  </system.net>-->
	<system.serviceModel>
		<bindings />
		<client />
		<behaviors>
			<serviceBehaviors>
				<behavior>
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="true" />
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug includeExceptionDetailInFaults="false" />
					<!-- To serialize big objects, change the object graph or increase the MaxItemsInObjectGraph  -->
					<dataContractSerializer maxItemsInObjectGraph="2147483647" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<!--<diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"
        maxMessagesToLog="3000"/>
    </diagnostics>-->
		<serviceHostingEnvironment multipleSiteBindingsEnabled="true" minFreeMemoryPercentageToActivateService="0">
			<serviceActivations>
				<!-- Service activations will be configured here... -->
				<add relativeAddress="BusinessPartnerService.svc" service="NFS.Services.BusinessPartnerService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BpLocationService.svc" service="NFS.Services.BpLocationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PGSService.svc" service="NFS.Services.PGSService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MetaDataService.svc" service="NS.Services.MetadataService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BusinessRuleManagementService.svc" service="NS.Services.BusinessRuleManagementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MasterDataService.svc" service="NS.Services.MasterDataService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BusinessRuleExecutionService.svc" service="NS.Services.BusinessRuleExecutionService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DataExtractionService.svc" service="NS.Services.DataExtractionService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LocalizationService.svc" service="NS.Services.LocalizationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CacheService.svc" service="NS.Services.CacheService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LocalizationDataService.svc" service="NS.Services.LocalizationDataService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="SecurityService.svc" service="NS.Services.SecurityService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ValidationService.svc" service="NS.Services.ValidationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BpmDesignerService.svc" service="NFS.Services.BpmDesignerService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AuditTrailService.svc" service="NS.Services.AuditTrailService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DynamicUiService.svc" service="NS.Services.DynamicUiService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MaskService.svc" service="NS.Services.MaskService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WorkflowEngineService.svc" service="NFS.Services.WorkflowEngineService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="QueueManagementService.svc" service="NFS.Services.QueueManagementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NotificationService.svc" service="NS.Services.NotificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ReportsConfigurationService.svc" service="NS.Services.ReportsConfigurationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DocumentManagementService.svc" service="NS.Services.DocumentManagementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AccountingService.svc" service="NFS.Services.AccountingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="TaskQueueService.svc" service="NFS.Services.TaskQueueService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BpmConfigurationService.svc" service="NFS.Services.BpmConfigurationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoggingService.svc" service="NS.Services.LoggingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LogViewerService.svc" service="NS.Services.LogViewerService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BusinessPartnerService.svc" service="NFS.Services.BusinessPartnerService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ExternalClientService.svc" service="NS.Services.ExternalClientService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ConfigurationService.svc" service="NS.Services.ConfigurationService" factory="NS.ServiceHosting.Factories.ConfigHost" />
				<add relativeAddress="WarmUpService.svc" service="NS.Services.WarmUpService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory"/>
				<add relativeAddress="SearchService.svc" service="NS.Services.SearchService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="HealthMonitoringService.svc" service="NS.Services.HealthMonitoringService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="HealthAndMonitoringService.svc" service="NS.Services.HealthAndMonitoringService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MonitoringService.svc" service="NS.Services.MonitoringService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<!--<add relativeAddress="SampleService.svc" service="NS.Services.SampleService" factory="NS.ServiceHosting.Factories.TcpHostFactory" />-->
				<add relativeAddress="DuplexSampleService.svc" service="NS.Services.DuplexSampleService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="IntegrationHubService.svc" service="NS.Services.IntegrationHubService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="IntegrationHubMSMQService.svc" service="NS.Services.IntegrationHubMsmqService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="IntegrationHubIBMMQService.svc" service="NS.Services.IntegrationHubIbmmqService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MultiTenancyService.svc" service="NS.Services.MultiTenancyService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NotificationRequestService.svc" service="NS.Services.NotificationRequestService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="SampleService.svc" service="NS.Services.SampleService" factory="NS.ServiceHosting.Factories.HttpsHostFactory" />
				<add relativeAddress="PublicAuditTrailService.svc" service="NS.Services.PublicAuditTrailService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DocumentUploadingService.svc" service="NS.Services.DocumentUploadingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<!--<add relativeAddress="PointScoreService.svc" service="NS.Services.PointScoreService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory"/>-->
				<add relativeAddress="ExposureService.svc" service="NFS.Services.ExposureService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="SendBackService.svc" service="NFS.Services.SendBackService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DocumentGenerationService.svc" service="NS.Services.DocumentGenerationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PrintRequestService.svc" service="NS.Services.PrintRequestService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NotificationServiceService.svc" service="NS.Services.NotificationServiceService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AuditTrailHostService.svc" service="NS.Services.AuditTrailHostService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ReceiptingService.svc" service="CMS.Services.ReceiptingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PDCService.svc" service="CMS.Services.PDCService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="OverdueCalculationService.svc" service="CMS.Services.OverdueCalculationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CollectionFollowupService.svc" service="CMS.Services.CollectionFollowupService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ChartsService.svc" service="NFS.Services.ChartsService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CalculationIntegrationService.svc" service="NFS.Services.CalculationIntegrationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AssetManagementService.svc" service="NFS.Services.AssetManagementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="FinancialProductService.svc" service="CMS.Services.FinancialProductService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CreditLineService.svc" service="CMS.Services.CreditLineService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ContractActivationService.svc" service="CMS.Services.ContractActivationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LienRegisterationService.svc" service="CMS.Services.LienRegisterationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DisbursementService.svc" service="CMS.Services.DisbursementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ContractClosingService.svc" service="CMS.Services.ContractClosingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ConvertToContractService.svc" service="CMS.Services.ConvertToContractService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DirectCreditService.svc" service="CMS.Services.DirectCreditService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ContractModificationService.svc" service="CMS.Services.ContractModificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ContractRevisionService.svc" service="CMS.Services.ContractRevisionService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PhoneVerificationService.svc" service="CAP.Services.PhoneVerificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="FinancialAnalysisService.svc" service="CAP.Services.FinancialAnalysisService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PickRepickService.svc" service="NFS.Services.PickRepickService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="UnderwritingProcessService.svc" service="CAP.Services.UnderwritingProcessService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AddressVerificationService.svc" service="CAP.Services.AddressVerificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="RedbookService.svc" service="NFS.Services.RedbookService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CeasarService.svc" service="NFS.Services.CeasarService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ExternalInterfaceService.svc" service="NFS.Services.ExternalInterfaceService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WFSExternalInterfaceService.svc" service="NFS.Services.WFSExternalInterfaceService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AllRmwService.svc" service="NFS.Services.AllRmwService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="KCBService.svc" service="NFS.Services.KCBService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ImportExportService.svc" service="NFS.Services.ImportExportService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="InterfaceQueueService.svc" service="NFS.Services.InterfaceQueueService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DocumentTrackingService.svc" service="NFS.Services.DocumentTrackingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ApplicationService.svc" service="POS.Services.ApplicationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PreQualificationService.svc" service="POS.Services.PreQualificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="QuotationService.svc" service="POS.Services.QuotationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PortalService.svc" service="POS.Services.PortalService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PosCalculationService.svc" service="POS.Services.PosCalculationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CurrencyChartService.svc" service="NFS.Services.CurrencyChartService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BatchProcessControllerService.svc" service="NFS.BatchProcessing.Services.BatchProcessControllerService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NcicSaicService.svc" service="NFS.Services.NcicSaicService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PbocReportsService.svc" service="NFS.Services.PbocReportsService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DmsReIndexingService.svc" service="NFS.Services.DmsReIndexingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="TaxConfigurationService.svc" service="NFS.Services.TaxConfigurationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DiaryService.svc" service="NFS.Services.DiaryService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DirectDebitService.svc" service="CMS.Services.DirectDebitService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DngService.svc" service="CMS.Services.DngService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DayEndService.svc" service="NFS.Services.DayEndService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BlazeResponse.svc" service="NFS.Services.BlazeResponse" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="TuService.svc" service="NFS.Services.TuService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="OnlineSelfService.svc" service="NFS.Services.OnlineSelfService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="QuestNetService.svc" service="NFS.Services.QuestNetService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CtosService.svc" service="NFS.Services.CtosService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NcbService.svc" service="NFS.Services.NcbService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="NiceService.svc" service="NFS.Services.NiceService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="KCBService.svc" service="NFS.Services.KCBService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CibilService.svc" service="NFS.Services.CibilService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WebPosSyncService.svc" service="NFS.Services.WebPosSyncService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PayableService.svc" service="NFS.Services.PayableService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DynamicUiWebService.svc" service="NFS.Services.DynamicUiWebService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="RepossessionService.svc" service="CMS.Services.RepossessionService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="RemarketingService.svc" service="CMS.Services.RemarketingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="EarlyTerminationService.svc" service="CMS.Services.EarlyTerminationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="OptionsToPurchaseService.svc" service="CMS.Services.OptionsToPurchaseService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="RequestAssociationsService.svc" service="NS.Services.RequestAssociationsService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="FlatCancellationService.svc" service="CMS.Services.FlatCancellationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CustomerServicesService.svc" service="CMS.Services.CustomerServicesService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PbocProcessService.svc" service="CMS.Services.PbocProcessService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="DocumentIndexingService.svc" service="NS.Services.DocumentIndexingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CsOverviewService.svc" service="CMS.Services.CsOverviewService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BadDebtProvisionService.svc" service="CMS.Services.BadDebtProvisionService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CsContractDetailsService.svc" service="CMS.Services.CsContractDetailsService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AssetBackedSecuritiesService.svc" service="CMS.Services.AssetBackedSecuritiesService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CaseManagementService.svc" service="NFS.Services.CaseManagementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoginService.svc" service="NS.Services.LoginService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LitigationService.svc" service="CMS.Services.LitigationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="EventDispatcherLogicService.svc" service="NFS.SchedulerEventDispatcher.EventDispatcherService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PromotionNotificationService.svc" service="NFS.Services.PromotionNotificationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ExternalCodesService.svc" service="NS.Services.ExternalCodesService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="MDSyncService.svc" service="NFS.Services.MDSyncService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<!--WFS Section-->
				<add relativeAddress="WfsReceiptingService.svc" service="WFS.Services.WfsReceiptingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="InvoicingService.svc" service="WFS.Services.InvoicingService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoanService.svc" service="WFS.Services.LoanService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CreditLimitService.svc" service="WFS.Services.CreditLimitService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoanFPService.svc" service="WFS.Services.LoanFPService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WFSChartsService.svc" service="WFS.Services.WFSChartsService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WFSChargesService.svc" service="WFS.Services.WFSChargesService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WFSPayableService.svc" service="WFS.Services.WFSPayableService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="WFSDisbursementService.svc" service="WFS.Services.WFSDisbursementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="TransferService.svc" service="WFS.Services.TransferService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CommonService.svc" service="WFS.Services.CommonService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoanRequestService.svc" service="WFS.Services.LoanRequestService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="AuditService.svc" service="WFS.Services.AuditService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoanDirectDebitService.svc" service="WFS.Services.LoanDirectDebitService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="InterestCalculationService.svc" service="WFS.Services.InterestCalculationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PenaltyCalculationService.svc" service="WFS.Services.PenaltyCalculationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="LoanDirectCreditService.svc" service="WFS.Services.LoanDirectCreditService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="CMAService.svc" service="WFS.Services.CMAService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="PointScoreServiceTest.svc" service="CMS.Services.PointScoreServiceTest" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BulletinBoardService.svc" service="WFS.Services.BulletinBoardService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ExternalCodesService.svc" service="NS.Services.ExternalCodesService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="JointLoanService.svc" service="CMS.Services.JointLoanService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="BPAgreementService.svc" service="WFS.Services.BPAgreementService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
				<add relativeAddress="ContractSecuritizationService.svc" service="CMS.Services.ContractSecuritizationService" factory="NS.ServiceHosting.Factories.HttpBasicHostFactory" />
			</serviceActivations>
		</serviceHostingEnvironment>
	</system.serviceModel>
	<!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.8" />
      </system.Web>
  -->
	<system.web>
		<compilation debug="true" targetFramework="4.8" />
		<httpRuntime targetFramework="4.6" enableVersionHeader="false" />
		<!--<httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web"/>
    </httpModules>-->
	</system.web>
	<!--<system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs"
        type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701"/>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb"
        type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+"/>
    </compilers>
  </system.codedom>-->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false" />
		<!--<modules>
      <remove name="ApplicationInsightsWebTracking"/>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web"
        preCondition="managedHandler"/>
    </modules>-->
		<directoryBrowse enabled="true" />
		<security>
			<requestFiltering>
				<requestLimits maxAllowedContentLength="102400000" />
				<hiddenSegments>
					<add segment="Archives" />
					<add segment="Logs" />
				</hiddenSegments>
			</requestFiltering>
		</security>
	</system.webServer>
	<!-- Configurations for Fiddler to sniff the incoming calls -->
	<!--<system.net>
    <defaultProxy enabled ="true" useDefaultCredentials = "true">
      <proxy autoDetect="false" bypassonlocal="false" proxyaddress="http://127.0.0.1:8888" usesystemdefault="false" />
    </defaultProxy>
  </system.net>-->
	<!-- End Configurations for Fiddler to sniff the incoming calls -->
</configuration>